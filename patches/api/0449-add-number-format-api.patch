From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: David Mayr <davidliebtkekse@gmail.com>
Date: Sat, 16 Dec 2023 10:40:29 +0100
Subject: [PATCH] add number format api


diff --git a/src/main/java/io/papermc/paper/scoreboard/numbers/BlankFormat.java b/src/main/java/io/papermc/paper/scoreboard/numbers/BlankFormat.java
new file mode 100644
index 0000000000000000000000000000000000000000..956f0e0e8c89713e354ae77656f731104b2a1a77
--- /dev/null
+++ b/src/main/java/io/papermc/paper/scoreboard/numbers/BlankFormat.java
@@ -0,0 +1,17 @@
+package io.papermc.paper.scoreboard.numbers;
+
+/*
+ * A scoreboard number format that completely hides the score number.
+ */
+public final class BlankFormat implements NumberFormat {
+
+    private static final BlankFormat INSTANCE = new BlankFormat();
+
+    BlankFormat() {}
+
+    public static BlankFormat blank() {
+        return BlankFormat.INSTANCE;
+    }
+
+
+}
diff --git a/src/main/java/io/papermc/paper/scoreboard/numbers/FixedFormat.java b/src/main/java/io/papermc/paper/scoreboard/numbers/FixedFormat.java
new file mode 100644
index 0000000000000000000000000000000000000000..a205143227b44a19fe5ebaf4933c746353664813
--- /dev/null
+++ b/src/main/java/io/papermc/paper/scoreboard/numbers/FixedFormat.java
@@ -0,0 +1,8 @@
+package io.papermc.paper.scoreboard.numbers;
+
+import net.kyori.adventure.text.Component;
+
+/*
+ * A scoreboard number format that replaces the score number with a chat component.
+ */
+public record FixedFormat(Component component) implements NumberFormat {}
diff --git a/src/main/java/io/papermc/paper/scoreboard/numbers/NumberFormat.java b/src/main/java/io/papermc/paper/scoreboard/numbers/NumberFormat.java
new file mode 100644
index 0000000000000000000000000000000000000000..9fbc6e4fe2ba23d34fe0c85dbee2d5c63e5cdb1f
--- /dev/null
+++ b/src/main/java/io/papermc/paper/scoreboard/numbers/NumberFormat.java
@@ -0,0 +1,6 @@
+package io.papermc.paper.scoreboard.numbers;
+
+/*
+ * Describes a scoreboard number format that applies custom formatting to scoreboard scores.
+ */
+public sealed interface NumberFormat permits BlankFormat, FixedFormat, StyledFormat {}
diff --git a/src/main/java/io/papermc/paper/scoreboard/numbers/StyledFormat.java b/src/main/java/io/papermc/paper/scoreboard/numbers/StyledFormat.java
new file mode 100644
index 0000000000000000000000000000000000000000..73c1e5990ca8af18dcdea4bdd275ee3c8f882f61
--- /dev/null
+++ b/src/main/java/io/papermc/paper/scoreboard/numbers/StyledFormat.java
@@ -0,0 +1,17 @@
+package io.papermc.paper.scoreboard.numbers;
+
+import net.kyori.adventure.text.format.NamedTextColor;
+import net.kyori.adventure.text.format.Style;
+
+/*
+ * A scoreboard number format that applies a custom formatting to the score number.
+ */
+public record StyledFormat(Style style) implements NumberFormat {
+
+    public static final StyledFormat NO_STYLE = new StyledFormat(Style.empty());
+
+    public static final StyledFormat SIDEBAR_DEFAULT = new StyledFormat(Style.empty().color(NamedTextColor.RED));
+
+    public static final StyledFormat PLAYER_LIST_DEFAULT = new StyledFormat(Style.empty().color(NamedTextColor.YELLOW));
+
+}
diff --git a/src/main/java/org/bukkit/scoreboard/Objective.java b/src/main/java/org/bukkit/scoreboard/Objective.java
index a193ffabb05160b462dee1ba8f687fdbc84405b6..3aba9fc61378421ebc2d2ab46b555fe7cd99474a 100644
--- a/src/main/java/org/bukkit/scoreboard/Objective.java
+++ b/src/main/java/org/bukkit/scoreboard/Objective.java
@@ -175,4 +175,18 @@ public interface Objective {
      */
     @NotNull Score getScoreFor(@NotNull org.bukkit.entity.Entity entity) throws IllegalArgumentException, IllegalStateException;
     // Paper end - improve scoreboard entries
+
+    //Paper start - number format
+    /*
+     * Gets the number format for this objective's entries (scores)
+     * @return this objective's number format
+     */
+    @Nullable io.papermc.paper.scoreboard.numbers.NumberFormat getNumberFormat();
+
+    /*
+     * Gets the number format for this objective's entries (scores)
+     * @param format the number format to set
+     */
+    void setNumberFormat(@Nullable io.papermc.paper.scoreboard.numbers.NumberFormat format);
+    //Paper end
 }
diff --git a/src/main/java/org/bukkit/scoreboard/Score.java b/src/main/java/org/bukkit/scoreboard/Score.java
index 1eaa9a93f8eff5f18a6cce2d74f21eb19db273c8..9e4bff64ebb7025e8b2af4fbdfb3e4f6883b035d 100644
--- a/src/main/java/org/bukkit/scoreboard/Score.java
+++ b/src/main/java/org/bukkit/scoreboard/Score.java
@@ -83,4 +83,19 @@ public interface Score {
      */
     void resetScore() throws IllegalStateException;
     // Paper end
+
+    //Paper start - number format
+    /*
+     * Gets the number format for this objective's entries (scores)
+     * @return this objective's number format
+     */
+    @Nullable io.papermc.paper.scoreboard.numbers.NumberFormat getNumberFormat();
+
+    /*
+     * Gets the number format for this objective's entries (scores)
+     * @param format the number format to set
+     */
+    void setNumberFormat(@Nullable io.papermc.paper.scoreboard.numbers.NumberFormat format);
+    //Paper end
+
 }
