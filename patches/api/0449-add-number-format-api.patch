From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: David Mayr <davidliebtkekse@gmail.com>
Date: Sat, 16 Dec 2023 10:40:29 +0100
Subject: [PATCH] add number format api


diff --git a/src/main/java/io/papermc/paper/scoreboard/numbers/BlankFormatImpl.java b/src/main/java/io/papermc/paper/scoreboard/numbers/BlankFormatImpl.java
new file mode 100644
index 0000000000000000000000000000000000000000..486da6ebe0137bb3280e8b33c8e35e309507f118
--- /dev/null
+++ b/src/main/java/io/papermc/paper/scoreboard/numbers/BlankFormatImpl.java
@@ -0,0 +1,5 @@
+package io.papermc.paper.scoreboard.numbers;
+
+record BlankFormatImpl() implements NumberFormat {
+    public static final BlankFormatImpl INSTANCE = new BlankFormatImpl();
+}
diff --git a/src/main/java/io/papermc/paper/scoreboard/numbers/FixedFormat.java b/src/main/java/io/papermc/paper/scoreboard/numbers/FixedFormat.java
new file mode 100644
index 0000000000000000000000000000000000000000..ed48a806ffc63c805cffeac615efbc58d39a95ed
--- /dev/null
+++ b/src/main/java/io/papermc/paper/scoreboard/numbers/FixedFormat.java
@@ -0,0 +1,17 @@
+package io.papermc.paper.scoreboard.numbers;
+
+import net.kyori.adventure.text.Component;
+
+/*
+ * A scoreboard number format that replaces the score number with a chat component.
+ */
+public interface FixedFormat extends NumberFormat {
+
+    /*
+     * The component shown instead of the number for a score
+     *
+     * @return the chat component
+     */
+    Component component();
+
+}
diff --git a/src/main/java/io/papermc/paper/scoreboard/numbers/FixedFormatImpl.java b/src/main/java/io/papermc/paper/scoreboard/numbers/FixedFormatImpl.java
new file mode 100644
index 0000000000000000000000000000000000000000..e58565dd0930593c7d70b0a5643cec36e456e7a9
--- /dev/null
+++ b/src/main/java/io/papermc/paper/scoreboard/numbers/FixedFormatImpl.java
@@ -0,0 +1,5 @@
+package io.papermc.paper.scoreboard.numbers;
+
+import net.kyori.adventure.text.Component;
+
+record FixedFormatImpl(Component component) implements FixedFormat {}
diff --git a/src/main/java/io/papermc/paper/scoreboard/numbers/NumberFormat.java b/src/main/java/io/papermc/paper/scoreboard/numbers/NumberFormat.java
new file mode 100644
index 0000000000000000000000000000000000000000..e326afc55cb0a3519471cbfc5ea44519f19b7a9c
--- /dev/null
+++ b/src/main/java/io/papermc/paper/scoreboard/numbers/NumberFormat.java
@@ -0,0 +1,40 @@
+package io.papermc.paper.scoreboard.numbers;
+
+import net.kyori.adventure.text.Component;
+import net.kyori.adventure.text.format.Style;
+import org.jetbrains.annotations.NotNull;
+
+/*
+ * Describes a scoreboard number format that applies custom formatting to scoreboard scores.
+ */
+public interface NumberFormat {
+
+    /*
+     * Creates a blank scoreboard number format that removes the score number entirely.
+     *
+     * @return a blank number format
+     */
+    static NumberFormat blank() {
+        return BlankFormatImpl.INSTANCE;
+    }
+
+    /*
+     * Creates a scoreboard number format that applies a custom formatting to the score number.
+     *
+     * @param style the style to apply on the number
+     * @return a styled number format
+     */
+    static StyledFormat styled(@NotNull Style style) {
+        return new StyledFormatImpl(style);
+    }
+
+    /*
+     * Creates a scoreboard number format that replaces the score number with a chat component.
+     *
+     * @param component the component to replace the number with
+     * @return a fixed number format
+     */
+    static FixedFormat fixed(@NotNull Component component) {
+        return new FixedFormatImpl(component);
+    }
+}
diff --git a/src/main/java/io/papermc/paper/scoreboard/numbers/StyledFormat.java b/src/main/java/io/papermc/paper/scoreboard/numbers/StyledFormat.java
new file mode 100644
index 0000000000000000000000000000000000000000..9b460425f109d8968e3b347bbbfca66361e4937d
--- /dev/null
+++ b/src/main/java/io/papermc/paper/scoreboard/numbers/StyledFormat.java
@@ -0,0 +1,24 @@
+package io.papermc.paper.scoreboard.numbers;
+
+import net.kyori.adventure.text.format.NamedTextColor;
+import net.kyori.adventure.text.format.Style;
+
+/*
+ * A scoreboard number format that applies a custom formatting to the score number.
+ */
+public interface StyledFormat extends NumberFormat {
+
+    StyledFormat NO_STYLE = NumberFormat.styled(Style.empty());
+
+    StyledFormat SIDEBAR_DEFAULT = NumberFormat.styled(Style.empty().color(NamedTextColor.RED));
+
+    StyledFormat PLAYER_LIST_DEFAULT = NumberFormat.styled(Style.empty().color(NamedTextColor.YELLOW));
+
+    /*
+     * The style that is being applied to the number in the score
+     *
+     * @return the style to apply
+     */
+    Style style();
+
+}
diff --git a/src/main/java/io/papermc/paper/scoreboard/numbers/StyledFormatImpl.java b/src/main/java/io/papermc/paper/scoreboard/numbers/StyledFormatImpl.java
new file mode 100644
index 0000000000000000000000000000000000000000..2489f63707bce74ecd8045948de73d529c06a446
--- /dev/null
+++ b/src/main/java/io/papermc/paper/scoreboard/numbers/StyledFormatImpl.java
@@ -0,0 +1,5 @@
+package io.papermc.paper.scoreboard.numbers;
+
+import net.kyori.adventure.text.format.Style;
+
+record StyledFormatImpl(Style style) implements StyledFormat {}
diff --git a/src/main/java/org/bukkit/scoreboard/Objective.java b/src/main/java/org/bukkit/scoreboard/Objective.java
index a193ffabb05160b462dee1ba8f687fdbc84405b6..7c7cebc06c7d16025a8a12421a79fbe50674049d 100644
--- a/src/main/java/org/bukkit/scoreboard/Objective.java
+++ b/src/main/java/org/bukkit/scoreboard/Objective.java
@@ -175,4 +175,22 @@ public interface Objective {
      */
     @NotNull Score getScoreFor(@NotNull org.bukkit.entity.Entity entity) throws IllegalArgumentException, IllegalStateException;
     // Paper end - improve scoreboard entries
+
+    // Paper start - number format
+    /*
+     * Gets the number format for this objective's entries (scores)
+     *
+     * @return this objective's number format
+     * @throws IllegalStateException if this objective has been unregistered
+     */
+    @Nullable io.papermc.paper.scoreboard.numbers.NumberFormat numberFormat();
+
+    /*
+     * Sets the number format for this objective's entries (scores)
+     *
+     * @param format the number format to set, pass null to reset format to default
+     * @throws IllegalStateException if this objective has been unregistered
+     */
+    void numberFormat(@Nullable io.papermc.paper.scoreboard.numbers.NumberFormat format);
+    // Paper end
 }
diff --git a/src/main/java/org/bukkit/scoreboard/Score.java b/src/main/java/org/bukkit/scoreboard/Score.java
index 1eaa9a93f8eff5f18a6cce2d74f21eb19db273c8..722f6f920045f6f85b347270bbb4e08232db1b9d 100644
--- a/src/main/java/org/bukkit/scoreboard/Score.java
+++ b/src/main/java/org/bukkit/scoreboard/Score.java
@@ -83,4 +83,25 @@ public interface Score {
      */
     void resetScore() throws IllegalStateException;
     // Paper end
+
+    // Paper start - number format
+    /*
+     * Gets the number format for this score or null if the score has not been set yet
+     *
+     * @return this score's number format
+     * @throws IllegalStateException if the associated objective has been
+     *     unregistered
+     */
+    @Nullable io.papermc.paper.scoreboard.numbers.NumberFormat numberFormat();
+
+    /*
+     * Sets the number format for this score
+     *
+     * @param format the number format to set, pass null to reset format to default
+     * @throws IllegalStateException if the associated objective has been
+     *     unregistered
+     */
+    void numberFormat(@Nullable io.papermc.paper.scoreboard.numbers.NumberFormat format);
+    // Paper end
+
 }
