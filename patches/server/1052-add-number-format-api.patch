From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: David Mayr <davidliebtkekse@gmail.com>
Date: Sat, 16 Dec 2023 10:40:29 +0100
Subject: [PATCH] add number format api


diff --git a/src/main/java/io/papermc/paper/util/PaperScoreboardFormat.java b/src/main/java/io/papermc/paper/util/PaperScoreboardFormat.java
new file mode 100644
index 0000000000000000000000000000000000000000..a9e2d3fe4420bad2bbd2d37d04411fa1c2ad74d9
--- /dev/null
+++ b/src/main/java/io/papermc/paper/util/PaperScoreboardFormat.java
@@ -0,0 +1,55 @@
+package io.papermc.paper.util;
+
+
+import io.papermc.paper.scoreboard.numbers.NumberFormat;
+
+public class PaperScoreboardFormat {
+
+    private PaperScoreboardFormat() {}
+
+
+    public static net.minecraft.network.chat.numbers.NumberFormat asVanilla(NumberFormat format) {
+        net.minecraft.network.chat.numbers.NumberFormat vanilla;
+        if (format instanceof io.papermc.paper.scoreboard.numbers.StyledFormat styled) {
+            com.google.gson.JsonElement json = net.kyori.adventure.text.serializer.gson.GsonComponentSerializer.gson().serializer()
+                .toJsonTree(styled.style());
+            net.minecraft.network.chat.Style vanillaStyle = net.minecraft.Util
+                .getOrThrow(net.minecraft.network.chat.Style.Serializer.CODEC
+                    .parse(com.mojang.serialization.JsonOps.INSTANCE, json), com.google.gson.JsonParseException::new);
+
+            vanilla = new net.minecraft.network.chat.numbers.StyledFormat(vanillaStyle);
+        } else if (format instanceof io.papermc.paper.scoreboard.numbers.FixedFormat fixed) {
+            vanilla = new net.minecraft.network.chat.numbers.FixedFormat(io.papermc.paper.adventure.PaperAdventure
+                .asVanilla(fixed.component()));
+        } else if(format instanceof io.papermc.paper.scoreboard.numbers.BlankFormat) {
+            vanilla = net.minecraft.network.chat.numbers.BlankFormat.INSTANCE;
+        } else {
+            throw new IllegalArgumentException("Unknown format type " + format.getClass());
+        }
+
+        return vanilla;
+    }
+
+    public static NumberFormat asPaper(net.minecraft.network.chat.numbers.NumberFormat vanilla) {
+        if (vanilla instanceof net.minecraft.network.chat.numbers.StyledFormat styled) {
+            com.google.gson.JsonElement json = net.minecraft.Util
+                .getOrThrow(
+                    net.minecraft.network.chat.Style.Serializer.CODEC
+                        .encodeStart(com.mojang.serialization.JsonOps.INSTANCE, styled.getStyle()),
+                    com.google.gson.JsonParseException::new
+                );
+
+            net.kyori.adventure.text.format.Style adventureStyle =
+                net.kyori.adventure.text.serializer.gson.GsonComponentSerializer.gson()
+                    .serializer().fromJson(json, net.kyori.adventure.text.format.Style.class);
+
+            return new io.papermc.paper.scoreboard.numbers.StyledFormat(adventureStyle);
+        } else if (vanilla instanceof net.minecraft.network.chat.numbers.FixedFormat fixed) {
+            return new io.papermc.paper.scoreboard.numbers.FixedFormat(io.papermc.paper.adventure.PaperAdventure.asAdventure(fixed.getValue()));
+        } else if(vanilla instanceof net.minecraft.network.chat.numbers.BlankFormat) {
+            return io.papermc.paper.scoreboard.numbers.BlankFormat.blank();
+        }
+
+        throw new IllegalArgumentException("Unknown format type " + vanilla.getClass());
+    }
+}
diff --git a/src/main/java/net/minecraft/network/chat/numbers/FixedFormat.java b/src/main/java/net/minecraft/network/chat/numbers/FixedFormat.java
index 2b9f393062444a663dcd25c78f9471beda65ccf0..eb0c12016a5ef1221a3d312b71c160f03124acaf 100644
--- a/src/main/java/net/minecraft/network/chat/numbers/FixedFormat.java
+++ b/src/main/java/net/minecraft/network/chat/numbers/FixedFormat.java
@@ -5,6 +5,7 @@ import net.minecraft.network.FriendlyByteBuf;
 import net.minecraft.network.chat.Component;
 import net.minecraft.network.chat.ComponentSerialization;
 import net.minecraft.network.chat.MutableComponent;
+import net.minecraft.network.chat.Style;
 
 public class FixedFormat implements NumberFormat {
     public static final NumberFormatType<FixedFormat> TYPE = new NumberFormatType<FixedFormat>() {
@@ -38,6 +39,7 @@ public class FixedFormat implements NumberFormat {
     public MutableComponent format(int number) {
         return this.value.copy();
     }
+    public Component getValue() { return this.value; } //Paper - make number formats accessible
 
     @Override
     public NumberFormatType<FixedFormat> type() {
diff --git a/src/main/java/net/minecraft/network/chat/numbers/StyledFormat.java b/src/main/java/net/minecraft/network/chat/numbers/StyledFormat.java
index 6a0700e2e88ebdd91a731084a3cf83b50f768730..6c1b586477ca6f86a05a53b2fc3ef6f345d8ab0d 100644
--- a/src/main/java/net/minecraft/network/chat/numbers/StyledFormat.java
+++ b/src/main/java/net/minecraft/network/chat/numbers/StyledFormat.java
@@ -43,7 +43,7 @@ public class StyledFormat implements NumberFormat {
     public MutableComponent format(int number) {
         return Component.literal(Integer.toString(number)).withStyle(this.style);
     }
-
+    public Style getStyle() { return this.style; } //Paper - make number formats accessible
     @Override
     public NumberFormatType<StyledFormat> type() {
         return TYPE;
diff --git a/src/main/java/org/bukkit/craftbukkit/scoreboard/CraftObjective.java b/src/main/java/org/bukkit/craftbukkit/scoreboard/CraftObjective.java
index 3157f3d2f9ce7af4a763203672817a7f5c7bd4fb..bdd2ed0aa62eea87d356d2229bb7fe41ba293e1d 100644
--- a/src/main/java/org/bukkit/craftbukkit/scoreboard/CraftObjective.java
+++ b/src/main/java/org/bukkit/craftbukkit/scoreboard/CraftObjective.java
@@ -152,6 +152,30 @@ final class CraftObjective extends CraftScoreboardComponent implements Objective
     }
     // Paper end
 
+    //Paper start - add number format
+    @Override
+    public io.papermc.paper.scoreboard.numbers.NumberFormat getNumberFormat() {
+        net.minecraft.network.chat.numbers.NumberFormat vanilla = this.objective.numberFormat();
+        
+        if(vanilla == null) {
+            return null;
+        }
+
+        return io.papermc.paper.util.PaperScoreboardFormat.asPaper(vanilla);
+    }
+
+
+    @Override
+    public void setNumberFormat(io.papermc.paper.scoreboard.numbers.NumberFormat format) {
+        if(format == null) {
+            this.objective.setNumberFormat(null);
+            return;
+        }
+
+        this.objective.setNumberFormat(io.papermc.paper.util.PaperScoreboardFormat.asVanilla(format));
+    }
+    //Paper end - add number format
+
     @Override
     public void unregister() {
         CraftScoreboard scoreboard = this.checkState();
diff --git a/src/main/java/org/bukkit/craftbukkit/scoreboard/CraftScore.java b/src/main/java/org/bukkit/craftbukkit/scoreboard/CraftScore.java
index be020d6b686c1ad5bd8b7cee0b6050304d434022..e07d8278722123341c9a60e99dccacab37a6c21e 100644
--- a/src/main/java/org/bukkit/craftbukkit/scoreboard/CraftScore.java
+++ b/src/main/java/org/bukkit/craftbukkit/scoreboard/CraftScore.java
@@ -57,6 +57,35 @@ final class CraftScore implements Score {
         this.objective.checkState().board.getOrCreatePlayerScore(this.entry, this.objective.getHandle()).set(score);
     }
 
+
+    //Paper start - add number format
+    @Override
+    public io.papermc.paper.scoreboard.numbers.NumberFormat getNumberFormat() {
+        net.minecraft.network.chat.numbers.NumberFormat vanilla = this.objective.checkState().board
+            .getPlayerScoreInfo(this.entry, this.objective.getHandle()).numberFormat();
+
+        if(vanilla == null) {
+            return null;
+        }
+
+        return io.papermc.paper.util.PaperScoreboardFormat.asPaper(vanilla);
+    }
+
+
+    @Override
+    public void setNumberFormat(io.papermc.paper.scoreboard.numbers.NumberFormat format) {
+        final net.minecraft.world.scores.ScoreAccess access = this.objective.checkState()
+            .board.getOrCreatePlayerScore(this.entry, this.objective.getHandle());
+
+        if(format == null) {
+            access.numberFormatOverride(null);
+            return;
+        }
+
+        access.numberFormatOverride(io.papermc.paper.util.PaperScoreboardFormat.asVanilla(format));
+    }
+    //Paper end - add number format
+
     @Override
     public boolean isScoreSet() {
         Scoreboard board = this.objective.checkState().board;
